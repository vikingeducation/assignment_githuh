{"version":3,"sources":["../index.js"],"names":["request","require","program","baseUri","GitHubUser","username","callback","_sendRequest","type","options","url","headers","console","log","error","response","body","statusCode","JSON","parse","infoRequestedValue","usernameValue","arguments","action","infoRequested","process","argv","exit","outputInfo","data","gitHubUser","repos","starredRepos","profile"],"mappings":";;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,UAAUD,QAAQ,WAAR,CAAhB;;AAEA,IAAME,UAAU,wBAAhB;;IAEMC,U;AACJ,sBAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;;;0BAEKC,Q,EAAU;AACd,WAAKC,YAAL,CAAkB,QAAlB,EAA4BD,QAA5B;AACD;;;iCAEYA,Q,EAAU;AACrB,WAAKC,YAAL,CAAkB,UAAlB,EAA8BD,QAA9B;AACD;;;4BAEOA,Q,EAAU;AAChB,WAAKC,YAAL,CAAkB,EAAlB,EAAsBD,QAAtB;AACD;;;iCAEYE,I,EAAMF,Q,EAAU;AAC3B,UAAMG,UAAU;AACdC,aAAQP,OAAR,eAAyB,KAAKE,QAA9B,GAAyCG,IAD3B;AAEdG,iBAAS,EAAC,cAAc,SAAf;AAFK,OAAhB;;AAKAC,cAAQC,GAAR,CAAY,UAAZ,EAAwBJ,QAAQC,GAAhC;;AAEAV,cAAQS,OAAR,EAAiB,UAASK,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC/C,YAAGF,SAASC,SAASE,UAAT,KAAwB,GAApC,EAAyC;AACvCL,kBAAQE,KAAR,CAAc,2BAAd,EAA2CC,SAASE,UAApD,EAAgE,IAAhE,EAAsEH,KAAtE;AACAF,kBAAQE,KAAR,CAAcE,IAAd;AACD;;AAED,YAAI,CAACF,KAAD,IAAUC,SAASE,UAAT,KAAwB,GAAtC,EAA2C;AACzCX,mBAASY,KAAKC,KAAL,CAAWH,IAAX,CAAT;AACD;AACF,OATD;AAUD;;;;;;AAGH,IAAII,2BAAJ;AACA,IAAIC,sBAAJ;;AAEAnB,QACGoB,SADH,CACa,4BADb,EAEGC,MAFH,CAEU,UAASC,aAAT,EAAwBnB,QAAxB,EAAkC;AACxCe,uBAAqBI,aAArB;AACAH,kBAAgBhB,QAAhB;AACD,CALH,EAMGc,KANH,CAMSM,QAAQC,IANjB;;AAQA,IAAK,OAAON,kBAAP,KAA8B,WAA/B,IAAgD,OAAOC,aAAP,KAAyB,WAA7E,EAA2F;AACzFT,UAAQE,KAAR,CAAc,gDAAd;AACAW,UAAQE,IAAR,CAAa,CAAb;AACD;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxBjB,UAAQC,GAAR,CAAYgB,IAAZ;AACD;;AAED,IAAIC,aAAa,IAAI1B,UAAJ,CAAeiB,aAAf,CAAjB;AACA,QAAQD,kBAAR;AACE,OAAK,OAAL;AACEU,eAAWC,KAAX,CAAiBH,UAAjB;AACA;AACF,OAAK,OAAL;AACEE,eAAWE,YAAX,CAAwBJ,UAAxB;AACA;AACF,OAAK,SAAL;AACEE,eAAWG,OAAX,CAAmBL,UAAnB;AACA;AATJ","file":"index.js","sourcesContent":["\n\nconst request = require('request');\nconst program = require('commander');\n\nconst baseUri = \"https://api.github.com\";\n\nclass GitHubUser {\n  constructor(username) {\n    this.username = username;\n  }\n\n  repos(callback) {\n    this._sendRequest(\"/repos\", callback);\n  }\n\n  starredRepos(callback) {\n    this._sendRequest(\"/starred\", callback);\n  }\n\n  profile(callback) {\n    this._sendRequest(\"\", callback);\n  }\n\n  _sendRequest(type, callback) {\n    const options = {\n      url: `${baseUri}/users/${this.username}${type}`,\n      headers: {'User-Agent': 'request'}\n    };\n\n    console.log('Request:', options.url);\n\n    request(options, function(error, response, body) {\n      if(error || response.statusCode !== 200) {\n        console.error('Request for info failed (', response.statusCode, '):', error);\n        console.error(body);\n      }\n\n      if (!error && response.statusCode === 200) {\n        callback(JSON.parse(body));\n      }\n    });\n  }\n}\n\nlet infoRequestedValue;\nlet usernameValue;\n\nprogram\n  .arguments('<infoRequested> <username>')\n  .action(function(infoRequested, username) {\n    infoRequestedValue = infoRequested;\n    usernameValue = username;\n  })\n  .parse(process.argv);\n\nif ((typeof infoRequestedValue === 'undefined') || (typeof usernameValue === 'undefined')) {\n  console.error('Error: infoRequested and username are required');\n  process.exit(1);\n}\n\nfunction outputInfo(data) {\n  console.log(data);\n}\n\nlet gitHubUser = new GitHubUser(usernameValue);\nswitch (infoRequestedValue) {\n  case 'repos':\n    gitHubUser.repos(outputInfo);\n    break;\n  case 'stars':\n    gitHubUser.starredRepos(outputInfo);\n    break;\n  case 'profile':\n    gitHubUser.profile(outputInfo);\n    break;\n}\n"]}